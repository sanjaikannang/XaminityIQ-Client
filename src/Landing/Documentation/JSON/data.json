{
    "sections": [
        {
            "id": "overview",
            "title": "Overview",
            "icon": "Home",
            "emoji": "üè†",
            "subTopics": [
                {
                    "id": "introduction",
                    "title": "Introduction",
                    "content": "Welcome to the comprehensive documentation for our Online Proctored Examination System. This system provides a secure, reliable, and user-friendly platform for conducting remote examinations with advanced proctoring capabilities."
                },
                {
                    "id": "problem-statement",
                    "title": "Problem Statement",
                    "content": "Traditional examination systems face challenges in remote environments, including lack of supervision, potential cheating, and difficulty in maintaining exam integrity. Our system addresses these challenges through advanced proctoring technologies and secure examination protocols."
                },
                {
                    "id": "tech-stack",
                    "title": "Tech Stack",
                    "content": "Frontend: React 18, TypeScript, Vite, Tailwind CSS\nBackend: NestJS, TypeScript, Node.js\nDatabase: MongoDB with Mongoose ODM\nAuthentication: JWT tokens with refresh token strategy\nReal-time: WebSockets for live proctoring\nAI/ML: Face recognition APIs, browser monitoring"
                },
                {
                    "id": "app-architecture",
                    "title": "App Architecture",
                    "content": "The system follows a microservices architecture with clear separation of concerns. The frontend handles user interactions and real-time monitoring, while the backend manages authentication, exam logic, and proctoring services. The database stores user data, exam configurations, and proctoring logs."
                },
                {
                    "id": "system-diagram",
                    "title": "System Diagram",
                    "content": "The system architecture includes: Client Applications (Student/Faculty/Admin interfaces), API Gateway, Authentication Service, Exam Management Service, Proctoring Service, Notification Service, and Database Layer. All components communicate through RESTful APIs and WebSocket connections."
                },
                {
                    "id": "roles-responsibilities",
                    "title": "Roles and Responsibilities (Admin, Faculty, Student)",
                    "content": "Admin: System configuration, user management, global settings, analytics dashboard\nFaculty: Create exams, manage questions, schedule tests, review results, monitor proctoring\nStudent: Take exams, view results, access study materials, receive notifications"
                }
            ]
        },
        {
            "id": "features",
            "title": "Features",
            "icon": "Sparkles",
            "emoji": "‚ú®",
            "subTopics": [
                {
                    "id": "proctoring-system",
                    "title": "Proctoring System",
                    "content": "Our comprehensive proctoring system combines manual and automatic monitoring to ensure exam integrity. It includes real-time video monitoring, behavior analysis, and automated alert systems."
                },
                {
                    "id": "manual-proctoring",
                    "title": "Manual Proctoring",
                    "content": "Faculty members can monitor students in real-time through live video feeds, chat with students, and manually flag suspicious activities. The system provides a comprehensive dashboard for monitoring multiple students simultaneously."
                },
                {
                    "id": "automatic-proctoring",
                    "title": "Automatic Proctoring",
                    "content": "AI-powered automatic proctoring detects suspicious behaviors including tab switching, multiple faces in frame, audio anomalies, and unusual eye movements. Automated alerts are generated for immediate faculty attention."
                },
                {
                    "id": "browser-lockdown",
                    "title": "Browser Lockdown",
                    "content": "The system implements browser lockdown features that prevent students from accessing other applications, copying content, or using browser developer tools during examinations."
                },
                {
                    "id": "tab-focus-detection",
                    "title": "Tab/Focus Change Detection",
                    "content": "Advanced JavaScript monitoring detects when students switch tabs, change window focus, or attempt to access other applications during the exam. Multiple violations can result in automatic exam termination."
                },
                {
                    "id": "face-verification",
                    "title": "Face Verification",
                    "content": "AI-powered face recognition ensures the registered student is taking the exam. The system performs initial identity verification and continuous monitoring throughout the examination period."
                },
                {
                    "id": "camera-mic-detection",
                    "title": "Camera/Mic Detection",
                    "content": "The system verifies camera and microphone functionality before exam start and continuously monitors their status. Students cannot proceed without proper hardware setup."
                },
                {
                    "id": "randomized-questions",
                    "title": "Randomized Questions",
                    "content": "Question banks support randomization to prevent cheating. Each student receives a unique set of questions with randomized order, ensuring fair assessment while maintaining exam integrity."
                },
                {
                    "id": "live-chat-help",
                    "title": "Live Chat/Help",
                    "content": "Real-time communication system allows students to request help during exams. Faculty can respond to queries, provide clarifications, and offer technical support without compromising exam security."
                },
                {
                    "id": "exam-analytics",
                    "title": "Exam Analytics",
                    "content": "Comprehensive analytics dashboard provides insights into exam performance, question difficulty analysis, time management patterns, and proctoring incident reports."
                },
                {
                    "id": "result-ranking",
                    "title": "Result & Ranking Generation",
                    "content": "Automated result calculation with customizable grading schemes. Generate class rankings, performance analytics, and detailed score reports with export capabilities."
                },
                {
                    "id": "notifications",
                    "title": "Notifications & Reminders",
                    "content": "Multi-channel notification system sends exam reminders, schedule updates, and important announcements via email, SMS, and in-app notifications."
                }
            ]
        },
        {
            "id": "functionality",
            "title": "Functionality",
            "icon": "Settings",
            "emoji": "‚öôÔ∏è",
            "subTopics": [
                {
                    "id": "user-authentication",
                    "title": "User Authentication (Login, Signup, Roles)",
                    "content": "Secure authentication system with JWT tokens, role-based access control, and multi-factor authentication options. Supports password reset, email verification, and session management."
                },
                {
                    "id": "create-exam",
                    "title": "Create Exam & Question Paper",
                    "content": "Faculty interface for creating comprehensive exams with multiple question types, media attachments, time limits, and grading criteria. Supports question banks and template reuse."
                },
                {
                    "id": "schedule-exam",
                    "title": "Schedule Exam",
                    "content": "Advanced scheduling system with timezone support, recurring exams, buffer times, and automatic notifications. Integration with calendar systems and bulk scheduling capabilities."
                },
                {
                    "id": "join-take-exam",
                    "title": "Join/Take Exam (Student Flow)",
                    "content": "Streamlined student experience from exam joining to submission. Includes system requirements check, identity verification, exam instructions, and secure test-taking environment."
                },
                {
                    "id": "proctoring-action",
                    "title": "Proctoring in Action",
                    "content": "Real-time proctoring dashboard showing live video feeds, behavior alerts, system violations, and communication tools. Faculty can take immediate actions like warnings or exam termination."
                },
                {
                    "id": "result-calculation",
                    "title": "Result Calculation",
                    "content": "Automated grading system with support for multiple question types, partial marking, negative marking, and custom grading schemes. Real-time result processing and analytics."
                },
                {
                    "id": "admin-dashboard",
                    "title": "Admin Dashboard",
                    "content": "Comprehensive administrative interface for user management, system configuration, exam oversight, analytics, and maintenance tasks. Role-based access with audit trails."
                },
                {
                    "id": "faculty-tools",
                    "title": "Faculty Tools",
                    "content": "Specialized tools for educators including exam creation wizards, question bank management, student monitoring, grade book, and performance analytics."
                },
                {
                    "id": "student-profile",
                    "title": "Student Profile",
                    "content": "Personal dashboard for students with exam schedules, results history, profile management, notification preferences, and academic progress tracking."
                }
            ]
        },
        {
            "id": "api-reference",
            "title": "API Reference",
            "icon": "Wifi",
            "emoji": "üåê",
            "subTopics": [
                {
                    "id": "auth-apis",
                    "title": "üßëüíº Auth - /auth/login",
                    "content": "Authentication endpoints for user login, registration, password reset, and token management. Includes JWT token generation, refresh token handling, and session management APIs."
                },
                {
                    "id": "admin-apis",
                    "title": "üßëüíº Admin APIs - /admin/create-user",
                    "content": "Administrative APIs for user management, system configuration, bulk operations, analytics, and maintenance tasks. Restricted to admin role with comprehensive audit logging."
                },
                {
                    "id": "faculty-apis",
                    "title": "üë®üè´ Faculty APIs - /faculty/create-exam",
                    "content": "Faculty-specific endpoints for exam creation, question management, student monitoring, result processing, and academic tools. Role-based access with course-specific permissions."
                },
                {
                    "id": "student-apis",
                    "title": "üë®üéì Student APIs - /student/join-exam",
                    "content": "Student APIs for exam participation, result viewing, profile management, and academic progress tracking. Secure endpoints with student-specific data access controls."
                },
                {
                    "id": "proctoring-apis",
                    "title": "üß™ Proctoring APIs - /proctoring/start-session",
                    "content": "Real-time proctoring APIs for session management, video streaming, behavior monitoring, alert generation, and incident reporting. WebSocket support for live monitoring."
                }
            ]
        },
        {
            "id": "db-schema",
            "title": "DB Schema",
            "icon": "Database",
            "emoji": "üóÑÔ∏è",
            "subTopics": [
                {
                    "id": "user-schema",
                    "title": "User Schema",
                    "content": "User collection schema: _id, email, password (hashed), role (admin/faculty/student), profile (name, avatar, contact), preferences, createdAt, updatedAt, lastLogin, isActive, verificationStatus."
                },
                {
                    "id": "exam-schema",
                    "title": "Exam Schema",
                    "content": "Exam collection schema: _id, title, description, createdBy, course, questions[], duration, startTime, endTime, instructions, settings (randomize, lockdown), status, participants[], results[]."
                },
                {
                    "id": "question-schema",
                    "title": "Question Schema",
                    "content": "Question collection schema: _id, type (mcq/essay/code), question, options[], correctAnswer, points, difficulty, tags[], createdBy, course, isActive, explanation, media[]."
                },
                {
                    "id": "response-schema",
                    "title": "Response Schema",
                    "content": "Response collection schema: _id, examId, studentId, questionId, answer, isCorrect, points, timeSpent, attemptNumber, submittedAt, flagged, proctorNotes."
                },
                {
                    "id": "proctoring-schema",
                    "title": "Proctoring Schema",
                    "content": "Proctoring collection schema: _id, examId, studentId, sessionId, startTime, endTime, violations[], alerts[], videoRecording, screenshots[], behaviorScore, status."
                },
                {
                    "id": "result-schema",
                    "title": "Result Schema",
                    "content": "Result collection schema: _id, examId, studentId, totalQuestions, correctAnswers, score, percentage, grade, rank, timeSpent, submittedAt, proctoringSummary, detailed breakdown."
                }
            ]
        },
        {
            "id": "security",
            "title": "Security",
            "icon": "Shield",
            "emoji": "üõ°Ô∏è",
            "subTopics": [
                {
                    "id": "authentication",
                    "title": "Authentication (JWT, Refresh Token Strategy)",
                    "content": "Secure authentication using JWT access tokens (15-minute expiry) and refresh tokens (7-day expiry). Tokens include user role, permissions, and session information. Automatic token refresh with secure storage."
                },
                {
                    "id": "authorization",
                    "title": "Authorization (Role-Based Access Control)",
                    "content": "Comprehensive RBAC system with granular permissions. Three main roles: Admin (full system access), Faculty (course management), Student (exam participation). API endpoints protected with role-specific middleware."
                },
                {
                    "id": "session-handling",
                    "title": "Session Handling",
                    "content": "Secure session management with encrypted session storage, automatic timeout, and concurrent session limits. Session invalidation on suspicious activity and logout from all devices functionality."
                },
                {
                    "id": "browser-restrictions",
                    "title": "Browser Restrictions",
                    "content": "Client-side security measures including disable right-click, prevent copy/paste, block developer tools, fullscreen enforcement, and exit prevention during active exams."
                },
                {
                    "id": "preventing-cheating",
                    "title": "Preventing Cheating (Tab switch, Face recognition)",
                    "content": "Multi-layered anti-cheating system: tab switch detection, face recognition verification, multiple person detection, audio monitoring, screen recording, and behavioral pattern analysis."
                },
                {
                    "id": "https-cookies",
                    "title": "HTTPS & Secure Cookies",
                    "content": "All communication over HTTPS with SSL/TLS encryption. Secure, HttpOnly, SameSite cookies for session management. CORS configuration and CSP headers for additional security."
                },
                {
                    "id": "password-encryption",
                    "title": "Password Encryption",
                    "content": "Passwords hashed using bcrypt with salt rounds (12). Password strength requirements, breach detection, and secure reset mechanisms. No plain text password storage."
                },
                {
                    "id": "ip-restrictions",
                    "title": "IP Restrictions (if any)",
                    "content": "Optional IP whitelisting for high-security exams. Geolocation tracking and suspicious location alerts. Rate limiting and DDoS protection measures implemented."
                }
            ]
        },
        {
            "id": "deployment",
            "title": "Deployment",
            "icon": "Rocket",
            "emoji": "üöÄ",
            "subTopics": [
                {
                    "id": "frontend-deployment",
                    "title": "Frontend Deployment (Vite + React)",
                    "content": "Frontend built with Vite for optimized production builds. Deployed on Vercel/Netlify with CDN distribution. Environment-specific configurations and automated deployment pipelines with GitHub Actions."
                },
                {
                    "id": "backend-deployment",
                    "title": "Backend Deployment (NestJS)",
                    "content": "NestJS backend deployed on AWS EC2/Digital Ocean with PM2 process management. Load balancing, auto-scaling, and health monitoring. Docker containerization for consistent deployments."
                },
                {
                    "id": "mongodb-hosting",
                    "title": "MongoDB Hosting (Atlas)",
                    "content": "MongoDB Atlas cloud hosting with replica sets for high availability. Automated backups, monitoring, and scaling. Connection pooling and optimized queries for performance."
                }
            ]
        }
    ]
}